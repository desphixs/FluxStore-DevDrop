# Generated by Django 5.2.5 on 2025-09-23 09:42

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('addon', '0006_remove_sociallink_site_config'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support_email', models.EmailField(blank=True, max_length=254)),
                ('support_phone', models.CharField(blank=True, max_length=40)),
                ('whatsapp', models.CharField(blank=True, max_length=40)),
                ('address_line1', models.CharField(blank=True, max_length=120)),
                ('address_line2', models.CharField(blank=True, max_length=120)),
                ('city', models.CharField(blank=True, max_length=80)),
                ('state', models.CharField(blank=True, max_length=80)),
                ('country', models.CharField(blank=True, max_length=80)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('twitter', models.URLField(blank=True)),
                ('instagram', models.URLField(blank=True)),
                ('facebook', models.URLField(blank=True)),
                ('youtube', models.URLField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('opening_hours', models.JSONField(blank=True, default=dict)),
                ('map_embed_url', models.URLField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Info',
                'verbose_name_plural': 'Contact Info',
            },
        ),
        migrations.CreateModel(
            name='FAQCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'FAQ Category',
                'verbose_name_plural': 'FAQ Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(choices=[('refund_policy', 'Refund Policy'), ('privacy_policy', 'Privacy Policy'), ('terms_and_conditions', 'Terms & Conditions'), ('cookie_policy', 'Cookie Policy'), ('shipping_policy', 'Shipping Policy'), ('about', 'About Us')], help_text='Fixed identifier used by views to fetch this page.', max_length=64, unique=True)),
                ('title', models.CharField(max_length=150)),
                ('content', models.TextField(blank=True, help_text='HTML or Markdown â€“ your choice.')),
                ('is_published', models.BooleanField(default=True)),
                ('meta_title', models.CharField(blank=True, max_length=70)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('hero_image', models.URLField(blank=True)),
                ('extras', models.JSONField(blank=True, default=dict, help_text='Any extra per-page data.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(blank=True, max_length=150)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('spam', 'Spam')], default='new', max_length=20)),
                ('consent', models.BooleanField(default=False, help_text='User consented to be contacted.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status'], name='addon_conta_status_9757e5_idx'), models.Index(fields=['created_at'], name='addon_conta_created_829552_idx')],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faqs', to='addon.faqcategory')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['sort_order', 'id'],
                'indexes': [models.Index(fields=['is_active'], name='addon_faq_is_acti_41e1c3_idx'), models.Index(fields=['sort_order'], name='addon_faq_sort_or_fbbf2e_idx')],
            },
        ),
    ]
